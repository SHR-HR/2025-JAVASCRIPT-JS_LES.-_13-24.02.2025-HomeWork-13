//=========================================================================================================
// JS ‚Ññ 13 - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫. –†–∞–±–æ—Ç–∞ –≤ –∫–ª–∞—Å—Å–µ - –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞ 
//=========================================================================================================


//=========================================================================================================
// –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ JavaScript, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –¥–µ–ª–∏—Ç—å –¥–≤–∞ —á–∏—Å–ª–∞, 
// –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–ª–æ–∫ try-catch –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–∑–º–æ–∂–Ω–æ–π –æ—à–∏–±–∫–∏ –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å. 
// –ï—Å–ª–∏ –ø—Ä–∏ –¥–µ–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤—ã–¥–∞–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ "–û—à–∏–±–∫–∞: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å!".
//  –ï—Å–ª–∏ –æ—à–∏–±–∫–∏ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–æ–¥–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–ª–µ–Ω–∏—è.
//---------------------------------------------------------------------------------------------------------
// –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ JavaScript, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏—Ö —Å—É–º–º—É. 
// –û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º, 
// —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤—ã–¥–∞–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ "–û—à–∏–±–∫–∞: –≤ –º–∞—Å—Å–∏–≤–µ –µ—Å—Ç—å –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!" —Å 
// –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–ª–æ–∫–∞ try-catch.
//---------------------------------------------------------------------------------------------------------
// –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ JavaScript, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –µ—ë –¥–ª–∏–Ω—É.
//  –û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ –≤—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π, 
// —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤—ã–¥–∞–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ "–û—à–∏–±–∫–∞: –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π!" —Å 
// –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–ª–æ–∫–∞ try-catch.
//=========================================================================================================

console.log("=== –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ ===");

let logData = []; // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π


// 1Ô∏è‚É£ **–§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–ª–µ–Ω–∏—è —á–∏—Å–µ–ª**
function divideNumbers(a, b) {
    try {
        if (b === 0) {
            throw new Error("–û—à–∏–±–∫–∞: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å!");
        }
        return a / b;
    } catch (error) {
        return error.message;
    }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ —á–∏—Å–µ–ª —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function divideNumbersPrompt() {
    let a = parseFloat(prompt("–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ:"));
    let b = parseFloat(prompt("–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ:"));

    if (isNaN(a) || isNaN(b)) {
        document.getElementById("divisionResult").innerHTML = "‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —á–∏—Å–ª–∞!";
        return;
    }

    let result = divideNumbers(a, b);
    document.getElementById("divisionResult").innerHTML = `‚ûó –†–µ–∑—É–ª—å—Ç–∞—Ç: ${result}`;
    logData.push({ task: "–î–µ–ª–µ–Ω–∏–µ —á–∏—Å–µ–ª", a, b, result });
}


// 2Ô∏è‚É£ **–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—É–º–º—ã –º–∞—Å—Å–∏–≤–∞**
function sumArray(numbers) {
    try {
        if (!Array.isArray(numbers)) {
            throw new Error("–û—à–∏–±–∫–∞: –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º!");
        }
        if (numbers.some(num => typeof num !== 'number')) {
            throw new Error("–û—à–∏–±–∫–∞: –≤ –º–∞—Å—Å–∏–≤–µ –µ—Å—Ç—å –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!");
        }
        return numbers.reduce((sum, num) => sum + num, 0);
    } catch (error) {
        return error.message;
    }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –º–∞—Å—Å–∏–≤–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function sumArrayPrompt() {
    let input = prompt("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é:").split(",");
    let numbers = input.map(num => parseFloat(num.trim()));

    if (numbers.some(isNaN)) {
        document.getElementById("arraySumResult").innerHTML = "‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞!";
        return;
    }

    let result = sumArray(numbers);
    document.getElementById("arraySumResult").innerHTML = `üî¢ –°—É–º–º–∞: ${result}`;
    logData.push({ task: "–°—É–º–º–∞ –º–∞—Å—Å–∏–≤–∞", input, result });
}


// 3Ô∏è‚É£ **–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –¥–ª–∏–Ω—ã —Å—Ç—Ä–æ–∫–∏**
function getStringLength(input) {
    try {
        if (typeof input !== 'string') {
            throw new Error("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π!");
        }
        return input.length;
    } catch (error) {
        return error.message;
    }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ —Å—Ç—Ä–æ–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getStringLengthPrompt() {
    let input = prompt("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É:");

    if (!input) {
        document.getElementById("stringLengthResult").innerHTML = "‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É!";
        return;
    }

    let result = getStringLength(input);
    document.getElementById("stringLengthResult").innerHTML = `üìè –î–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏: ${result}`;
    logData.push({ task: "–î–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏", input, result });
}


// ‚úÖ **–í—ã–≤–æ–¥ –ª–æ–≥–∞ –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π**
function showLog() {
    console.log("=== –õ–û–ì –í–´–ü–û–õ–ù–ï–ù–ù–´–• –î–ï–ô–°–¢–í–ò–ô ===");
    console.table(logData);
    document.getElementById("logOutput").textContent = JSON.stringify(logData, null, 2);
}
